{"version":3,"sources":["services/vaccinations.js","services/orders.js","components/Navbar.js","state/daySlice.js","components/Table.js","pages/Home.js","components/Footer.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["getAll","a","axios","get","response","data","baseUrl","expiresIn10Days","day","expiredToday","Navbar","class","role","fontSize","color","daySlice","createSlice","name","initialState","selectedDay","format","parseISO","reducers","changeDay","state","action","Date","payload","actions","selectDay","TableHeader","titles","map","t","index","Tooltip","title","tooltip","placement","arrow","SubHeader","style","fontWeight","TableRow","values","total","value","textAlign","Table","className","arrivedToday","length","totalArrivedBy","givenToday","totalGivenBy","bottlesExpiredToday","expiredBottles","expiresin10Days","DetailsTable","brandDetails","InjectionsArrivedToday","InjectionsArrived","zerpfyArrived","todaysOrders","antiquaArrived","solarBuddhicaArrived","todaysInjections","zerpfyExpired","antiquaExpired","solarBuddhicaExpired","totalExpiredToday","totalOrders","totalInjections","bottlesExpired","initialBrandDetails","Home","vaccinations","orders","loading","useSelector","dispatch","useDispatch","useState","setState","setBrandDetails","showDetails","setShowDetails","loadingData","setLoadingData","useEffect","prevState","totalGiven","totalArrived","bottlesExpiredOnToday","expiresSoon","countBrandDetails","fetchData","sumReducer","sum","handleOnClick","filter","isBefore","vaccinationDate","slice","addDays","o","arrived","v","isSameDay","subDays","orderBrand","brand","vaccine","orderBrandToday","injections","reduce","orderService","filterBrand","d","expired","vaccines","CircularProgress","disableShrink","size","onClick","selected","onChange","toString","inline","minDate","maxDate","Footer","href","App","setVaccinations","setOrders","setLoading","vaccinationService","vaccinationData","orderData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","dayReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c72029c5.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/vaccinations'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {getAll}","import axios from 'axios'\nconst baseUrl = '/api/orders'\n\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst expiresIn10Days = async (day) => {\n    const response = await axios.get(baseUrl + '/exp10/' + day)\n    return response.data\n} \n\nconst expiredToday = async (day) => {\n    const response = await axios.get(baseUrl + '/expired/' + day)\n    return response.data\n}\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, expiredToday, expiresIn10Days }","import React from 'react'\nimport '../styles/Styles.css'\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\n\nconst Navbar = () => {\n    return (\n        <nav class=\"navbar is-spaced has-shadow mb-6\" role=\"navigation\" aria-label=\"main navigation\">\n            <div class=\"navbar-brand\">\n                <div class=\"navbar-item\">\n                    <LocalHospitalIcon fontSize='large' color='primary'/>\n                </div>\n                <div class=\"navbar-item\">\n                <h1 class=\"title has-text-danger-dark \">Vaxxy</h1>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar","import {createSlice} from '@reduxjs/toolkit'\nimport { parseISO, format} from 'date-fns'\n\n//reducer for changing selected day in calendar\nexport const daySlice = createSlice({\n    name: 'day',\n    initialState: {\n        selectedDay: format(parseISO('2021-01-02'), \"yyyy-MM-dd\")\n\n    },\n    reducers: {\n        changeDay: (state, action) => {\n            state.selectedDay = format(new Date(action.payload), \"yyyy-MM-dd\")\n        }\n    }\n})\n\nexport const { changeDay } = daySlice.actions\n\nexport const selectDay = state => state.day.selectedDay\n\nexport default daySlice.reducer","import React from \"react\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport '../styles/Styles.css'\n\nconst TableHeader = ({titles}) => {\n    return (\n        <thead>\n            <tr>\n                <th></th>\n                {titles.map((t, index) => {\n                     return (\n                         <Tooltip key={index} title={t.tooltip} aria-label={t.tooltip} placement='top' arrow>\n                            <th>{t.title}</th>\n                        </Tooltip>\n                     )\n                })}\n            </tr>\n      </thead>\n    )\n}\n\nconst SubHeader = ({title}) => {\n    return (\n        <tr>\n            <th style={{fontWeight: 'bold'}}>{title}</th>\n            <th></th>\n            <th></th>\n            <th></th>\n            <th></th>\n        </tr>\n    )\n}\n\n\nconst TableRow = ({title, values, total}) => {\n    return (\n        <tr>\n          <td>{title}</td>\n          {values.map((value, index) => {\n              return <td key={index} style={{textAlign: \"center\"}}>{value}</td>\n          })}\n          <td style={{ fontWeight: \"bold\" , textAlign: \"center\"}}>{total}</td>\n        </tr>\n    )\n}\n\nexport const Table = ({ state, day }) => {\n  return (\n      <div className='tableStyle'>\n        <table class=\"table is-hoverable is-narrow\">\n        <TableHeader titles={[{title: `On ${day}`, tooltip: 'Selected day'}, {title: 'In total', tooltip:'Status by selected day'}]} />\n            <tbody>\n                <TableRow title='Orders arrived (bottle)' values={[state.arrivedToday.length]}\n                    total={state.totalArrivedBy.length} />\n                <TableRow title='Vaccinations given' values={[state.givenToday.length]}\n                    total={state.totalGivenBy.length} />\n                <TableRow title='Bottles expired' values={[state.bottlesExpiredToday.length]}\n                    total={state.expiredBottles.length} />\n                <TableRow title='Vaccinations expiring in 10 days' values={['']}\n                    total={state.expiresin10Days} />\n            </tbody>\n        </table>\n    </div>\n  );\n};\n\n\nexport const DetailsTable = ({ state, brandDetails, InjectionsArrivedToday, InjectionsArrived, day }) => {\n    return (\n        <div className='tableStyle'>\n        <table class='table is-hoverable is-narrow is-flex-shrink-3'>\n            <TableHeader titles={[{title: 'Zerpfy', tooltip:'5 injections per bottle'},\n            {title: 'Antiqua', tooltip:'4 injections per bottle'}, \n            {title: 'SolarBuddhica', tooltip:'6 injections per bottle'},\n            {title: 'Total', tooltip: 'In total' }]} />\n                <tbody>\n                    <SubHeader title={`Status on ${day}`}/>\n                    <TableRow title='Orders arrived' values={[brandDetails.zerpfyArrived.todaysOrders, brandDetails.antiquaArrived.todaysOrders, brandDetails.solarBuddhicaArrived.todaysOrders]} \n                        total={state.arrivedToday.length}/>\n                    <TableRow title='Vaccinations arrived' values={[brandDetails.zerpfyArrived.todaysInjections, brandDetails.antiquaArrived.todaysInjections, brandDetails.solarBuddhicaArrived.todaysInjections]}\n                        total={InjectionsArrivedToday} />\n                    <TableRow title='Vaccinations expired' values={[brandDetails.zerpfyExpired, brandDetails.antiquaExpired, brandDetails.solarBuddhicaExpired]}\n                        total={brandDetails.totalExpiredToday} />\n                    <SubHeader title='Total status per producer' />\n                    <TableRow title='Orders arrived' values={[brandDetails.zerpfyArrived.totalOrders, brandDetails.antiquaArrived.totalOrders, brandDetails.solarBuddhicaArrived.totalOrders]}\n                        total={state.totalArrivedBy.length} />\n                    <TableRow title='Vaccinations arrived' values={[brandDetails.zerpfyArrived.totalInjections, brandDetails.antiquaArrived.totalInjections, brandDetails.solarBuddhicaArrived.totalInjections]}\n                        total={InjectionsArrived} />\n                </tbody>\n        </table>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {selectDay, changeDay} from '../state/daySlice'\nimport { parseISO, isBefore, addDays, isSameDay, subDays} from 'date-fns'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport orderService from '../services/orders'\nimport { Table, DetailsTable } from '../components/Table'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport '../styles/Styles.css'\nimport '../styles/CalendarStyle.css'\n\nconst initialState = {\n    totalGivenBy: [],\n    totalArrivedBy:[],\n    givenToday: [],\n    arrivedToday: [],\n    bottlesExpired: [],\n    bottlesExpiredToday : [],\n    expiresin10Days: 0\n}\n\nconst initialBrandDetails = {\n    zerpfyArrived: {totalOrders: 0, totalInjections: 0, todaysOrders: 0, todaysInjections: 0},\n    zerpfyExpired: 0,\n    antiquaArrived:{totalOrders: 0, totalInjections: 0, todaysOrders: 0, todaysInjections: 0},\n    antiquaExpired: 0, \n    solarBuddhicaArrived: {totalOrders: 0, totalInjections: 0, todaysOrders: 0, todaysInjections: 0},\n    solarBuddhicaExpired: 0,\n    totalExpiredToday: 0\n}\n\nconst Home = ({vaccinations, orders, loading}) => {\n    const day = useSelector(selectDay)\n    const dispatch = useDispatch()\n    const [state, setState] = useState(initialState)\n    const [brandDetails, setBrandDetails] = useState(initialBrandDetails)\n    const [showDetails, setShowDetails] = useState(false)\n    const [loadingData, setLoadingData] = useState(false)\n\n    useEffect(() => {\n        async function fetchData()  {\n             setState( prevState => ({\n                ...prevState,\n                totalGivenBy: totalGiven(),\n                totalArrivedBy: totalArrived(),\n                givenToday: givenToday(),\n                arrivedToday: arrivedToday(),\n                expiredBottles: bottlesExpired(),\n                bottlesExpiredToday: bottlesExpiredOnToday(),\n            }))\n            expiresSoon()\n            if (showDetails === true || day === '2021-01-02') {\n                countBrandDetails()\n                expiredToday()\n            }\n        }\n        fetchData()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [day, showDetails, orders])\n\n    //helper function for adding up values\n    const sumReducer = (sum, value) => {\n        return sum + value\n    } \n\n    const handleOnClick = () => {\n        setShowDetails(!showDetails)\n    }\n   \n    // total vaccinations and orders given and arrived\n    const totalGiven = () => vaccinations.filter(a => isBefore(parseISO((a.vaccinationDate).slice(0, -8)), (addDays(parseISO(day), 1))))\n    const totalArrived = () => orders.filter(o => isBefore(parseISO((o.arrived).slice(0, -8)), (addDays(parseISO(day), 1))))\n    // filter for vaccines  and orders given and arrived on selected day\n    const givenToday = () => vaccinations.filter(v => isSameDay(parseISO((v.vaccinationDate).slice(0, -8)), parseISO(day)))\n    const arrivedToday = () => orders.filter(o => isSameDay(parseISO((o.arrived).slice(0, -8)), parseISO(day)))\n    // filter for orders that arrived at least 30 days ago\n    const bottlesExpired = () => orders.filter(o => isBefore(parseISO((o.arrived).slice(0, -8)), subDays(parseISO(day), 29)))\n    const bottlesExpiredOnToday = () => orders.filter(o => isSameDay(parseISO((o.arrived).slice(0, -8)), subDays(parseISO(day), 30)))\n   \n    //count total amount of injections from orders\n    const InjectionsArrived = brandDetails.zerpfyArrived.totalInjections + brandDetails.antiquaArrived.totalInjections + brandDetails.solarBuddhicaArrived.totalInjections\n    const InjectionsArrivedToday = brandDetails.zerpfyArrived.todaysInjections + brandDetails.antiquaArrived.todaysInjections + brandDetails.solarBuddhicaArrived.todaysInjections\n\n    //filter data for different manufacturers/brands\n    const countBrandDetails = () => {\n        const orderBrand = (brand) => totalArrived().filter(v => v.vaccine === brand)\n        const orderBrandToday = (brand) => arrivedToday().filter(v => v.vaccine === brand)\n        const totalInjections = (brand) =>  orderBrand(brand).map(a => a.injections).reduce(sumReducer, 0)\n        const todaysInjections = (brand) => orderBrandToday(brand).map(a => a.injections).reduce(sumReducer, 0)\n\n        setBrandDetails(prevState => ({\n            ...prevState,\n            zerpfyArrived: {totalOrders: orderBrand('Zerpfy').length , totalInjections: totalInjections('Zerpfy'), todaysOrders: orderBrandToday('Zerpfy').length, todaysInjections: todaysInjections('Zerpfy')},\n            antiquaArrived: {totalOrders: orderBrand('Antiqua').length , totalInjections: totalInjections('Antiqua'), todaysOrders: orderBrandToday('Antiqua').length, todaysInjections: todaysInjections('Antiqua')},\n            solarBuddhicaArrived: {totalOrders: orderBrand('SolarBuddhica').length , totalInjections: totalInjections('SolarBuddhica'), todaysOrders: orderBrandToday('SolarBuddhica').length, todaysInjections: todaysInjections('SolarBuddhica')},\n\n        }))\n    }\n\n    //filter for orders that arrived 30 days ago\n    //api call returns data with amount of vaccines given substracted from the bottles\n    const expiredToday = async () => {\n        setLoadingData(true)\n        const data = await orderService.expiredToday(day)\n        const filterBrand = (brand) => data.filter(d => d.vaccine === brand)\n        setBrandDetails(prevState => ({\n            ...prevState,\n            totalExpiredToday: data.map(d => d.expired).reduce(sumReducer, 0),\n            zerpfyExpired: filterBrand('Zerpfy').map(v => v.expired).reduce(sumReducer, 0),\n            antiquaExpired: filterBrand('Antiqua').map(v => v.expired).reduce(sumReducer, 0),\n            solarBuddhicaExpired: filterBrand('SolarBuddhica').map(v => v.expired).reduce(sumReducer, 0)\n        }))\n        setLoadingData(false)\n    }\n    \n    const expiresSoon = async () => {\n        setLoadingData(true)\n        const data = await orderService.expiresIn10Days(day)\n        setState(prevState =>    ({\n            ...prevState, \n            expiresin10Days: data.map(d => d.injections - d.vaccines).reduce(sumReducer, 0)\n        }))\n        setLoadingData(false)\n    } \n        \n    return (\n        <div class=\"container\">\n        <div class=\"columns is-centered-desktop\">\n            <div class=\"column is-8 is-centered-mobile\">\n                <div class=\"box\">\n                {loading ? <div className='spinnerStyle'><CircularProgress color='primary' disableShrink/></div>\n                : \n                <>\n                {state.totalArrivedBy.length > 0 ? \n                <>\n                    <h2 class=\"has-text-danger-dark is-size-4 has-text-weight-medium mb-6\">\n                        Status of Orders and Vaccinations &emsp;\n                        {loadingData ? <CircularProgress size='1.4rem' color='inherit'/> : null}\n                    </h2>\n                    <Table state={state} day={day}/>\n                    {showDetails ? \n                    <>  \n                        <div className='buttonStyle'>\n                            <button class='button is-danger is-light' onClick={handleOnClick}>Hide details</button> \n                        </div>\n                        <h3 class=\"has-text-danger-dark is-size-5 mb-3\">Details per manufacturer</h3>\n                        <DetailsTable state={state} brandDetails={brandDetails} InjectionsArrived={InjectionsArrived}\n                            InjectionsArrivedToday={InjectionsArrivedToday} day={day}/>\n                    </>\n                    :\n                        <div className='buttonStyle'>\n                        <button class='button is-danger is-light' onClick={handleOnClick}>Show details</button> \n                        </div>\n                    }\n                </>\n                : null }\n                </>\n                }\n                </div>\n            </div>\n            <div class=\"column is-4-desktop is-8-tablet is-centered\">\n               <div class=\"box\" >\n                    <Tooltip placement='top' title='Check status for a date in between 02.01.2021 - 12.04.2021' aria-label='Check status for a date in between 02.01.2021 - 13.04.2021' arrow>\n                        <div><h2 class=\"has-text-danger-dark is-size-4 has-text-weight-medium has-text-centered\">Select a date</h2></div>\n                    </Tooltip>\n                <div className='centerCalendar'>\n                    <DatePicker \n                    selected={parseISO(day)} \n                    onChange={(d) => dispatch(changeDay(d.toString()))} \n                    inline\n                    minDate={new Date('2021-01-02')}\n                    maxDate={new Date('2021-04-13')}\n                    />\n                </div> \n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport '../styles/Styles.css'\n\nconst Footer = () => {\n    return (\n        <footer class=\"footer\" >\n        <div class=\"content has-text-centered has-text-danger-dark\">\n            <p>\n            <strong>Vaxxy</strong> by <a href=\"https://github.com/NinaWeiler\">Nina Weiler</a>.\n            </p>\n        </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport vaccinationService from './services/vaccinations'\nimport orderService from './services/orders'\nimport Navbar from './components/Navbar'\nimport Home from './pages/Home'\nimport Footer from './components/Footer'\n\n\nconst App = () => {\n  const [vaccinations, setVaccinations] = useState([])\n  const [orders, setOrders] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  \n  //fetch all orders and vaccinations\n  useEffect(() => {\n    async function fetchData()  {\n      setLoading(true)\n      const vaccinationData = await vaccinationService.getAll()\n      setVaccinations(vaccinationData)\n      const orderData = await orderService.getAll()\n      setOrders(orderData)\n      setLoading(false)\n    } \n    fetchData()\n  }, []) \n\n  \n  return (\n    <>\n    <Navbar/>\n    <Home vaccinations={vaccinations} orders={orders} loading={loading}/> \n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\nimport dayReducer from './state/daySlice'\n\n\nexport default configureStore({\n    reducer: {\n        day: dayReducer,\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}